# This workflow checks whether last release is not too old

name: Check last release

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '59 23 * * 0'

env:
  GLOBAL_VAR: 5

jobs:

  test:
    runs-on: ubuntu-latest
    steps:
      - name: first
        if: env.GLOBAL_VAR > 3
        run: echo "STEP_VAR=9" >> $GITHUB_ENV
      - name: second
        if: env.STEP_VAR > 2
        run: echo "STEP_VAR=${{ STEP_VAR }}, GLOBAL_VAR=${{ GLOBAL_VAR }}"
      - name: third
        if: env.STEP_VAR > env.GLOBAL_VAR
        run: echo "env.STEP_VAR > env.GLOBAL_VAR"
      - name: fourth
        if: env.STEP_VAR < env.GLOBAL_VAR
        run: echo "env.STEP_VAR < env.GLOBAL_VAR"

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

  rottenness:

    runs-on: ubuntu-latest

    steps:

    - name: Dump GitHub context - DEBUG
      env:
        GITHUB_CONTEXT: ${{ toJSON(github) }}
      run: echo "$GITHUB_CONTEXT"

    - name: Check last release date
      continue-on-error: true
      run: |
        latest_release="$(curl --silent https://api.github.com/repos/Samsung/CredSweeper/releases/latest)"
        echo "latest_release=$latest_release" #dbg
        published_date=$(echo "${latest_release}" | jq --raw-output '.published_at')
        echo "published_date=$published_date" #dbg
        echo "current_date=$(date +%s)"
        release_age=$(( $(date +%s) - $(date --date="${published_date}" +%s) ))
        echo "release_age=$release_age" #dbg
        if [ 0 -ge ${release_age} ]; then
            echo "Probably, release: ${published_date} and current timezone confuse me"
            release_age=0
        fi
        tag_name=$(echo "${latest_release}" | jq --raw-output '.tag_name')
        echo "tag_name=$tag_name" #dbg
        if [ 600 -gt ${release_age} ]; then
            echo "Release is fresh"
            echo "TAG_NAME=" >> $GITHUB_ENV
        else
            echo "Release is rotten"
            echo "TAG_NAME=${tag_name}" >> $GITHUB_ENV
        fi
        echo "TAG_NAME=${tag_name}" >> $GITHUB_ENV
        echo "RELEASE_AGE=${release_age}" >> $GITHUB_ENV

    - name: dbg
      if: env.TAG_NAME
      run: |
        echo "OVERAGE=${{ env.OVERAGE }}"
        echo "RELEASE_AGE=${{ env.RELEASE_AGE }}"
        echo "TAG_NAME=${{ env.TAG_NAME }}"
        

    - name: Checkout current code of default branch
      if: env.TAG_NAME
      uses: actions/checkout@v3
      with:
        repository: Samsung/CredSweeper
        ref: main
        path: main

    - name: Checkout last release code
      if: env.TAG_NAME
      uses: actions/checkout@v3
      with:
        repository: Samsung/CredSweeper
        ref: ${{ env.TAG_NAME }}
        path: ${{ env.TAG_NAME }}

    - name: Compare source code of versions
      if: env.TAG_NAME
      run: diff ${{ env.TAG_NAME }}/credsweeper ${{ github.event.repository.default_branch }}/credsweeper

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
